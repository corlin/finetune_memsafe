[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "evaluation-tests"
version = "0.1.0"
description = "Test suite for Qwen3 evaluation system"
authors = [
    {name = "Evaluation Team"}
]
dependencies = [
    # 核心测试框架
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-html>=3.1.0",
    "pytest-xdist>=3.0.0",
    "pytest-timeout>=2.1.0",
    "pytest-mock>=3.10.0",
    
    # 数据处理
    "datasets>=2.0.0",
    "pandas>=1.5.0",
    "numpy>=1.21.0",
    
    # 性能监控
    "psutil>=5.9.0",
    "memory-profiler>=0.60.0",
    
    # 配置管理
    "PyYAML>=6.0",
    "jsonschema>=4.0.0",
    
    # 可视化
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    
    # 文本处理
    "nltk>=3.7",
    "jieba>=0.42.1",
    
    # 机器学习
    "scikit-learn>=1.1.0",
    
    # 网络请求
    "requests>=2.28.0",
    
    # Excel支持
    "openpyxl>=3.0.0",
    
    # 模板引擎
    "jinja2>=3.1.0",
    
    # 统计分析
    "scipy>=1.9.0",
    
    # 进度条
    "tqdm>=4.64.0",
    
    # 日期时间处理
    "python-dateutil>=2.8.0",
]

[project.optional-dependencies]
gpu = [
    "torch>=1.12.0",
    "transformers>=4.20.0",
]
dev = [
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
]
markers = [
    "unit: 单元测试",
    "integration: 集成测试", 
    "performance: 性能测试",
    "slow: 慢速测试",
    "gpu: 需要GPU的测试",
    "network: 需要网络的测试",
]
minversion = "6.0"
timeout = 300
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["src/evaluation"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "test_results/coverage_html"

[tool.coverage.xml]
output = "test_results/coverage.xml"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["evaluation"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "datasets.*",
    "transformers.*",
    "torch.*",
    "sklearn.*",
    "matplotlib.*",
    "seaborn.*",
    "nltk.*",
    "jieba.*",
]
ignore_missing_imports = true